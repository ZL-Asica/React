import{_ as e,c as s,o as i,ag as t}from"./chunks/framework.BmLMQRXF.js";const k=JSON.parse('{"title":"removeSpecialCharacters()","description":"","frontmatter":{},"headers":[],"relativePath":"docs/utils/removeSpecialCharacters.md","filePath":"docs/utils/removeSpecialCharacters.md"}'),r={name:"docs/utils/removeSpecialCharacters.md"};function l(n,a,p,h,c,o){return i(),s("div",null,a[0]||(a[0]=[t(`<h1 id="removespecialcharacters" tabindex="-1">removeSpecialCharacters() <a class="header-anchor" href="#removespecialcharacters" aria-label="Permalink to &quot;removeSpecialCharacters()&quot;">​</a></h1><blockquote><p><strong>removeSpecialCharacters</strong>(<code>input</code>): <code>string</code></p></blockquote><p>Defined in: <a href="https://github.com/ZL-Asica/React/blob/8d3cb0dac8adfb5efa1cab2247ce721be08ac793/src/utils/stringUtils.ts#L106" target="_blank" rel="noreferrer">src/utils/stringUtils.ts:106</a></p><p>Removes special characters from a string, preserving letters, numbers, and spaces.</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="input" tabindex="-1">input <a class="header-anchor" href="#input" aria-label="Permalink to &quot;input&quot;">​</a></h3><p><code>string</code></p><p>The string to clean.</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>string</code></p><p>The cleaned string containing only letters, numbers, and spaces.</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">removeSpecialCharacters</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hello, World! 123&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;Hello World 123&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">removeSpecialCharacters</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;你好，世界！123&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;你好世界123&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">removeSpecialCharacters</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;@#%*&amp;$&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;&#39;</span></span></code></pre></div>`,13)]))}const m=e(r,[["render",l]]);export{k as __pageData,m as default};
