import{_ as o,c as a,a2 as t,o as r}from"./chunks/framework.BQmytedh.js";const p=JSON.parse('{"title":"Function: useAsync()","description":"","frontmatter":{},"headers":[],"relativePath":"api/hooks/async/functions/useAsync.md","filePath":"api/hooks/async/functions/useAsync.md"}'),n={name:"api/hooks/async/functions/useAsync.md"};function s(c,e,d,i,u,l){return r(),a("div",null,e[0]||(e[0]=[t('<h1 id="function-useasync" tabindex="-1">Function: useAsync() <a class="header-anchor" href="#function-useasync" aria-label="Permalink to &quot;Function: useAsync()&quot;">​</a></h1><blockquote><p><strong>useAsync</strong>&lt;<code>T</code>, <code>E</code>&gt;(<code>asyncFunction</code>, <code>immediate</code>): <code>object</code></p></blockquote><p>Async hook</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>T</strong></p><p>• <strong>E</strong> = <code>Error</code></p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><p>• <strong>asyncFunction</strong></p><p>async function to execute</p><p>• <strong>immediate</strong>: <code>boolean</code> = <code>true</code></p><p>Should the function be executed immediately (default true)</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>object</code></p><p>execute, loading, error, result - async function, loading state, error state, result state</p><h3 id="execute" tabindex="-1">execute() <a class="header-anchor" href="#execute" aria-label="Permalink to &quot;execute()&quot;">​</a></h3><blockquote><p><strong>execute</strong>: () =&gt; <code>Promise</code>&lt;<code>void</code>&gt;</p></blockquote><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>Promise</code>&lt;<code>void</code>&gt;</p><h3 id="loading" tabindex="-1">loading <a class="header-anchor" href="#loading" aria-label="Permalink to &quot;loading&quot;">​</a></h3><blockquote><p><strong>loading</strong>: <code>boolean</code></p></blockquote><h3 id="error" tabindex="-1">error <a class="header-anchor" href="#error" aria-label="Permalink to &quot;error&quot;">​</a></h3><blockquote><p><strong>error</strong>: <code>null</code> | <code>E</code></p></blockquote><h3 id="result" tabindex="-1">result <a class="header-anchor" href="#result" aria-label="Permalink to &quot;result&quot;">​</a></h3><blockquote><p><strong>result</strong>: <code>null</code> | <code>T</code></p></blockquote><h2 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h2><p><a href="https://github.com/ZL-Asica/React/blob/23b5bb72a0f02b3d94eff08bde40451691f0097e/src/hooks/async/useAsync.ts#L9" target="_blank" rel="noreferrer">hooks/async/useAsync.ts:9</a></p>',26)]))}const b=o(n,[["render",s]]);export{p as __pageData,b as default};
