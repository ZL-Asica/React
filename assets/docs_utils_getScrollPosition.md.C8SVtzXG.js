import{_ as i,c as t,o as e,ag as a}from"./chunks/framework.BmLMQRXF.js";const k=JSON.parse('{"title":"getScrollPosition()","description":"","frontmatter":{},"headers":[],"relativePath":"docs/utils/getScrollPosition.md","filePath":"docs/utils/getScrollPosition.md"}'),o={name:"docs/utils/getScrollPosition.md"};function l(n,s,r,c,h,d){return e(),t("div",null,s[0]||(s[0]=[a('<h1 id="getscrollposition" tabindex="-1">getScrollPosition() <a class="header-anchor" href="#getscrollposition" aria-label="Permalink to &quot;getScrollPosition()&quot;">​</a></h1><blockquote><p><strong>getScrollPosition</strong>(): <code>object</code></p></blockquote><p>Defined in: <a href="https://github.com/ZL-Asica/React/blob/8f44a2f6140c99e2d0f314f3b1426690ba824960/src/utils/domUtils.ts#L19" target="_blank" rel="noreferrer">src/utils/domUtils.ts:19</a></p><p>Retrieves the current scroll position of the window.</p><p>This function calculates the horizontal (<code>x</code>) and vertical (<code>y</code>) scroll positions using <code>window.scrollX</code>, <code>window.scrollY</code>, or fallback methods for older browsers.</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>object</code></p><p>An object containing the <code>x</code> and <code>y</code> scroll positions.</p><h3 id="x" tabindex="-1">x <a class="header-anchor" href="#x" aria-label="Permalink to &quot;x&quot;">​</a></h3><blockquote><p><strong>x</strong>: <code>number</code></p></blockquote><h3 id="y" tabindex="-1">y <a class="header-anchor" href="#y" aria-label="Permalink to &quot;y&quot;">​</a></h3><blockquote><p><strong>y</strong>: <code>number</code></p></blockquote><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">x</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getScrollPosition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">`Scroll X: ${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}, Scroll Y: ${</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">}`</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div>',14)]))}const g=i(o,[["render",l]]);export{k as __pageData,g as default};
