import{_ as a,c as s,o as t,ag as i}from"./chunks/framework.CkHWihve.js";const k=JSON.parse('{"title":"isObject()","description":"","frontmatter":{},"headers":[],"relativePath":"docs/utils/isObject.md","filePath":"docs/utils/isObject.md"}'),l={name:"docs/utils/isObject.md"};function n(r,e,o,c,h,p){return t(),s("div",null,e[0]||(e[0]=[i(`<h1 id="isobject" tabindex="-1">isObject() <a class="header-anchor" href="#isobject" aria-label="Permalink to &quot;isObject()&quot;">​</a></h1><blockquote><p><strong>isObject</strong>(<code>value</code>): <code>value is Record&lt;string, unknown&gt;</code></p></blockquote><p>Defined in: <a href="https://github.com/ZL-Asica/React/blob/c677df2e2d1600a4402f43274851e62eee9eb9e5/src/utils/objectUtils.ts#L32" target="_blank" rel="noreferrer">src/utils/objectUtils.ts:32</a></p><p>Determines whether a value is a non-array object.</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="value" tabindex="-1">value <a class="header-anchor" href="#value" aria-label="Permalink to &quot;value&quot;">​</a></h3><p><code>unknown</code> = <code>null</code></p><p>The value to check.</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>value is Record&lt;string, unknown&gt;</code></p><p><code>true</code> if the value is an object, otherwise <code>false</code>.</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isObject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({}); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// true</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isObject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// false</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isObject</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([]); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// false</span></span></code></pre></div>`,13)]))}const u=a(l,[["render",n]]);export{k as __pageData,u as default};
