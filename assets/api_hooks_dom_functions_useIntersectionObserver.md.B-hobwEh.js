import{_ as t,c as r,a2 as o,o as n}from"./chunks/framework.BQmytedh.js";const p=JSON.parse('{"title":"Function: useIntersectionObserver()","description":"","frontmatter":{},"headers":[],"relativePath":"api/hooks/dom/functions/useIntersectionObserver.md","filePath":"api/hooks/dom/functions/useIntersectionObserver.md"}'),s={name:"api/hooks/dom/functions/useIntersectionObserver.md"};function a(i,e,c,d,u,b){return n(),r("div",null,e[0]||(e[0]=[o('<h1 id="function-useintersectionobserver" tabindex="-1">Function: useIntersectionObserver() <a class="header-anchor" href="#function-useintersectionobserver" aria-label="Permalink to &quot;Function: useIntersectionObserver()&quot;">​</a></h1><blockquote><p><strong>useIntersectionObserver</strong>(<code>reference</code>, <code>options</code>): <code>boolean</code></p></blockquote><p>Intersection observer with cleanup Use this hook to detect when an element enters the viewport e.g. useIntersectionObserver(ref, { threshold: 0.5 })</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><p>• <strong>reference</strong>: <code>RefObject</code>&lt;<code>HTMLElement</code>&gt;</p><p>• <strong>options</strong>: <code>IntersectionObserverInit</code> = <code>{}</code></p><p>IntersectionObserver options (default {})</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>boolean</code></p><p>boolean - isIntersecting</p><h2 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h2><p><a href="https://github.com/ZL-Asica/React/blob/23b5bb72a0f02b3d94eff08bde40451691f0097e/src/hooks/dom/useIntersectionObserver.ts#L12" target="_blank" rel="noreferrer">hooks/dom/useIntersectionObserver.ts:12</a></p>',12)]))}const h=t(s,[["render",a]]);export{p as __pageData,h as default};
