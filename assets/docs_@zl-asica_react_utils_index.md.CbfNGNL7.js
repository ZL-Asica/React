import{_ as i,c as s,o as e,ag as l}from"./chunks/framework.BmLMQRXF.js";const d=JSON.parse('{"title":"@zl-asica/react/utils","description":"","frontmatter":{},"headers":[],"relativePath":"docs/@zl-asica/react/utils/index.md","filePath":"docs/@zl-asica/react/utils/index.md"}'),t={name:"docs/@zl-asica/react/utils/index.md"};function n(r,a,h,p,o,c){return e(),s("div",null,a[0]||(a[0]=[l(`<h1 id="zl-asica-react-utils" tabindex="-1">@zl-asica/react/utils <a class="header-anchor" href="#zl-asica-react-utils" aria-label="Permalink to &quot;@zl-asica/react/utils&quot;">​</a></h1><p>This module contains utility functions for arrays, dates, DOM, math, objects, and strings. Compatible with SSR (Server-Side Rendering).</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { assignUUID } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@zl-asica/react/utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> data</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  { id: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;1&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;John&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  { id: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;2&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, name: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Jane&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> dataWithUUID</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> assignUUID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(data)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// → [ { id: &#39;1&#39;, name: &#39;John&#39; }, { id: &#39;2&#39;, name: &#39;Jane&#39; } ]</span></span></code></pre></div><h2 id="functions" tabindex="-1">Functions <a class="header-anchor" href="#functions" aria-label="Permalink to &quot;Functions&quot;">​</a></h2><ul><li><a href="./chunkArray">chunkArray</a></li><li><a href="./uniqueArray">uniqueArray</a></li><li><a href="./isAllZeroArray">isAllZeroArray</a></li><li><a href="./assignUUID">assignUUID</a></li><li><a href="./formatDate">formatDate</a></li><li><a href="./isSameDay">isSameDay</a></li><li><a href="./getDayOfWeek">getDayOfWeek</a></li><li><a href="./getRelativeDay">getRelativeDay</a></li><li><a href="./getScrollPosition">getScrollPosition</a></li><li><a href="./copyToClipboard">copyToClipboard</a></li><li><a href="./pasteFromClipboard">pasteFromClipboard</a></li><li><a href="./backToTop">backToTop</a></li><li><a href="./randomInt">randomInt</a></li><li><a href="./randomFloat">randomFloat</a></li><li><a href="./clamp">clamp</a></li><li><a href="./lerp">lerp</a></li><li><a href="./mapRange">mapRange</a></li><li><a href="./deepClone">deepClone</a></li><li><a href="./isObject">isObject</a></li><li><a href="./mergeObjects">mergeObjects</a></li><li><a href="./pick">pick</a></li><li><a href="./omit">omit</a></li><li><a href="./isEmpty">isEmpty</a></li><li><a href="./capitalize">capitalize</a></li><li><a href="./camelCaseToKebabCase">camelCaseToKebabCase</a></li><li><a href="./truncate">truncate</a></li><li><a href="./toSnakeCase">toSnakeCase</a></li><li><a href="./reverseString">reverseString</a></li><li><a href="./removeSpecialCharacters">removeSpecialCharacters</a></li><li><a href="./generateUniqueId">generateUniqueId</a></li><li><a href="./truncateToNearestWord">truncateToNearestWord</a></li></ul>`,6)]))}const g=i(t,[["render",n]]);export{d as __pageData,g as default};
