import{_ as e,c as s,o as i,ag as t}from"./chunks/framework.BmLMQRXF.js";const k=JSON.parse('{"title":"formatDate()","description":"","frontmatter":{},"headers":[],"relativePath":"docs/utils/formatDate.md","filePath":"docs/utils/formatDate.md"}'),o={name:"docs/utils/formatDate.md"};function r(n,a,l,d,h,p){return i(),s("div",null,a[0]||(a[0]=[t(`<h1 id="formatdate" tabindex="-1">formatDate() <a class="header-anchor" href="#formatdate" aria-label="Permalink to &quot;formatDate()&quot;">​</a></h1><blockquote><p><strong>formatDate</strong>(<code>date</code>?, <code>format</code>?): <code>string</code></p></blockquote><p>Defined in: <a href="https://github.com/ZL-Asica/React/blob/f7fa8c2a267222eb7b37348d24d5d2f6e6440d9a/src/utils/dateUtils.ts#L26" target="_blank" rel="noreferrer">src/utils/dateUtils.ts:26</a></p><p>Formats a <code>Date</code> object into a string according to the specified format.</p><p>Supported placeholders in the format string:</p><ul><li><code>YYYY</code>: Four-digit year (e.g., 2024).</li><li><code>YY</code>: Two-digit year (e.g., 24).</li><li><code>MM</code>: Two-digit month (e.g., 01 for January).</li><li><code>DD</code>: Two-digit day of the month (e.g., 09).</li><li><code>HH</code>: Two-digit hour in 24-hour format (e.g., 15 for 3 PM).</li><li><code>mm</code>: Two-digit minutes (e.g., 07).</li><li><code>ss</code>: Two-digit seconds (e.g., 45).</li></ul><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="date" tabindex="-1">date? <a class="header-anchor" href="#date" aria-label="Permalink to &quot;date?&quot;">​</a></h3><p>The date to format. Can be a <code>Date</code> object or a string.</p><p><code>null</code> | <code>string</code> | <code>Date</code></p><h3 id="format" tabindex="-1">format? <a class="header-anchor" href="#format" aria-label="Permalink to &quot;format?&quot;">​</a></h3><p><code>string</code> = <code>&#39;YYYY-MM-DD&#39;</code></p><p>The format string. Defaults to <code>&#39;YYYY-MM-DD&#39;</code>.</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>string</code></p><p>A formatted date string. Returns an empty string if the input is invalid.</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> now</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;2024-11-18T12:34:56Z&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">formatDate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(now, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;YYYY-MM-DD&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;2024-11-18&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">formatDate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(now, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;YYYY-MM-DD HH:mm:ss&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;2024-11-18 12:34:56&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">formatDate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(now, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;MM/DD/YYYY&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;11/18/2024&#39;</span></span></code></pre></div>`,18)]))}const g=e(o,[["render",r]]);export{k as __pageData,g as default};
