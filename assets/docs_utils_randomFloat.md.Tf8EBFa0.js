import{_ as e,c as t,o as s,ag as i}from"./chunks/framework.BmLMQRXF.js";const m=JSON.parse('{"title":"randomFloat()","description":"","frontmatter":{},"headers":[],"relativePath":"docs/utils/randomFloat.md","filePath":"docs/utils/randomFloat.md"}'),o={name:"docs/utils/randomFloat.md"};function n(r,a,d,l,h,p){return s(),t("div",null,a[0]||(a[0]=[i('<h1 id="randomfloat" tabindex="-1">randomFloat() <a class="header-anchor" href="#randomfloat" aria-label="Permalink to &quot;randomFloat()&quot;">​</a></h1><blockquote><p><strong>randomFloat</strong>(<code>min</code>, <code>max</code>): <code>number</code></p></blockquote><p>Defined in: <a href="https://github.com/ZL-Asica/React/blob/f7fa8c2a267222eb7b37348d24d5d2f6e6440d9a/src/utils/mathUtils.ts#L35" target="_blank" rel="noreferrer">src/utils/mathUtils.ts:35</a></p><p>Generates a random floating-point number between <code>min</code> and <code>max</code>.</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="min" tabindex="-1">min <a class="header-anchor" href="#min" aria-label="Permalink to &quot;min&quot;">​</a></h3><p><code>number</code></p><p>The minimum value.</p><h3 id="max" tabindex="-1">max <a class="header-anchor" href="#max" aria-label="Permalink to &quot;max&quot;">​</a></h3><p><code>number</code></p><p>The maximum value.</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>number</code></p><p>A random float between <code>min</code> and <code>max</code>. Returns <code>NaN</code> if inputs are invalid.</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> random</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> randomFloat</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// e.g., 3.14</span></span></code></pre></div>',16)]))}const u=e(o,[["render",n]]);export{m as __pageData,u as default};
