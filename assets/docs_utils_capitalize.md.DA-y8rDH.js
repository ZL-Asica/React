import{_ as i,c as s,a2 as e,o as t}from"./chunks/framework.BQmytedh.js";const k=JSON.parse('{"title":"capitalize()","description":"","frontmatter":{},"headers":[],"relativePath":"docs/utils/capitalize.md","filePath":"docs/utils/capitalize.md"}'),l={name:"docs/utils/capitalize.md"};function n(r,a,p,h,o,c){return t(),s("div",null,a[0]||(a[0]=[e(`<h1 id="capitalize" tabindex="-1">capitalize() <a class="header-anchor" href="#capitalize" aria-label="Permalink to &quot;capitalize()&quot;">​</a></h1><blockquote><p><strong>capitalize</strong>(<code>input</code>): <code>string</code></p></blockquote><p>Capitalizes the first letter of a string.</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><p>• <strong>input</strong>: <code>string</code></p><p>The string to capitalize.</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>string</code></p><p>The capitalized string. Returns an empty string if the input is empty.</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">capitalize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;hello&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;Hello&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">capitalize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Hello&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;Hello&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">capitalize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;&#39;</span></span></code></pre></div><h2 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h2><p><a href="https://github.com/ZL-Asica/React/blob/6d4580b8bc1c67315cb918db84f8e80f948c4e85/src/utils/stringUtils.ts#L14" target="_blank" rel="noreferrer">utils/stringUtils.ts:14</a></p>`,13)]))}const g=i(l,[["render",n]]);export{k as __pageData,g as default};
