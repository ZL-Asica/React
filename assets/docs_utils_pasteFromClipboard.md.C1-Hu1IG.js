import{_ as e,c as s,o as t,ag as i}from"./chunks/framework.CkHWihve.js";const m=JSON.parse('{"title":"pasteFromClipboard()","description":"","frontmatter":{},"headers":[],"relativePath":"docs/utils/pasteFromClipboard.md","filePath":"docs/utils/pasteFromClipboard.md"}'),r={name:"docs/utils/pasteFromClipboard.md"};function o(p,a,l,n,d,h){return t(),s("div",null,a[0]||(a[0]=[i(`<h1 id="pastefromclipboard" tabindex="-1">pasteFromClipboard() <a class="header-anchor" href="#pastefromclipboard" aria-label="Permalink to &quot;pasteFromClipboard()&quot;">​</a></h1><blockquote><p><strong>pasteFromClipboard</strong>(): <code>Promise</code>&lt;<code>string</code>&gt;</p></blockquote><p>Defined in: <a href="https://github.com/ZL-Asica/React/blob/c677df2e2d1600a4402f43274851e62eee9eb9e5/src/utils/domUtils.ts#L99" target="_blank" rel="noreferrer">src/utils/domUtils.ts:99</a></p><p>Retrieves text from the clipboard.</p><p>This function uses the Clipboard API to read text from the clipboard. If an error occurs, it returns an empty string.</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>Promise</code>&lt;<code>string</code>&gt;</p><p>A promise that resolves to the text from the clipboard, or an empty string if an error occurs.</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> text</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> await</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> pasteFromClipboard</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(text);</span></span></code></pre></div>`,10)]))}const k=e(r,[["render",o]]);export{m as __pageData,k as default};
