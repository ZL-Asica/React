import{_ as s,c as e,o as i,ag as t}from"./chunks/framework.BmLMQRXF.js";const g=JSON.parse('{"title":"getDayOfWeek()","description":"","frontmatter":{},"headers":[],"relativePath":"docs/utils/getDayOfWeek.md","filePath":"docs/utils/getDayOfWeek.md"}'),n={name:"docs/utils/getDayOfWeek.md"};function h(l,a,k,r,d,p){return i(),e("div",null,a[0]||(a[0]=[t(`<h1 id="getdayofweek" tabindex="-1">getDayOfWeek() <a class="header-anchor" href="#getdayofweek" aria-label="Permalink to &quot;getDayOfWeek()&quot;">​</a></h1><blockquote><p><strong>getDayOfWeek</strong>(<code>date</code>): <code>string</code></p></blockquote><p>Defined in: <a href="https://github.com/ZL-Asica/React/blob/9573eb4b49dd81b7303709e1395640e41c871d45/src/utils/dateUtils.ts#L104" target="_blank" rel="noreferrer">src/utils/dateUtils.ts:104</a></p><p>Gets the day of the week for a given date.</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="date" tabindex="-1">date <a class="header-anchor" href="#date" aria-label="Permalink to &quot;date&quot;">​</a></h3><p>The date (or string) for which to get the day of the week.</p><p><code>string</code> | <code>Date</code></p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>string</code></p><p>The name of the day of the week (e.g., &#39;Monday&#39;, &#39;Tuesday&#39;). Returns an empty string if the input is invalid.</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> day1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getDayOfWeek</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;2024-11-19&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;Tuesday&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> day2</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getDayOfWeek</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;2024-11-19&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;Tuesday&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> day3</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> getDayOfWeek</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Invalid date string&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &#39;&#39;</span></span></code></pre></div>`,13)]))}const c=s(n,[["render",h]]);export{g as __pageData,c as default};
