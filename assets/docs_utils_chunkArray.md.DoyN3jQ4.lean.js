import{_ as e,c as r,a2 as t,o}from"./chunks/framework.BQmytedh.js";const p=JSON.parse('{"title":"chunkArray()","description":"","frontmatter":{},"headers":[],"relativePath":"docs/utils/chunkArray.md","filePath":"docs/utils/chunkArray.md"}'),s={name:"docs/utils/chunkArray.md"};function n(c,a,i,d,l,h){return o(),r("div",null,a[0]||(a[0]=[t('<h1 id="chunkarray" tabindex="-1">chunkArray() <a class="header-anchor" href="#chunkarray" aria-label="Permalink to &quot;chunkArray()&quot;">​</a></h1><blockquote><p><strong>chunkArray</strong>&lt;<code>T</code>&gt;(<code>array</code>, <code>size</code>): <code>T</code>[][]</p></blockquote><p>Chunks an array into smaller arrays of a specified size.</p><h2 id="type-parameters" tabindex="-1">Type Parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type Parameters&quot;">​</a></h2><p>• <strong>T</strong></p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><p>• <strong>array</strong>: <code>T</code>[]</p><p>array to chunk</p><p>• <strong>size</strong>: <code>number</code></p><p>size of each chunk</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>T</code>[][]</p><ul><li>2D array of chunks</li></ul><h2 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h2><p><a href="https://github.com/ZL-Asica/React/blob/ac9a8a18b36534d801b5b264dbc0a136a2e4aec1/src/utils/arrayUtils.ts#L7" target="_blank" rel="noreferrer">utils/arrayUtils.ts:7</a></p>',15)]))}const m=e(s,[["render",n]]);export{p as __pageData,m as default};
