import{_ as s,c as i,o as e,ag as t}from"./chunks/framework.CkHWihve.js";const d=JSON.parse('{"title":"backToTop()","description":"","frontmatter":{},"headers":[],"relativePath":"docs/utils/backToTop.md","filePath":"docs/utils/backToTop.md"}'),o={name:"docs/utils/backToTop.md"};function l(n,a,h,p,r,c){return e(),i("div",null,a[0]||(a[0]=[t(`<h1 id="backtotop" tabindex="-1">backToTop() <a class="header-anchor" href="#backtotop" aria-label="Permalink to &quot;backToTop()&quot;">​</a></h1><blockquote><p><strong>backToTop</strong>(<code>top</code>?, <code>behavior</code>?, <code>callback</code>?): (<code>event</code>?) =&gt; <code>void</code></p></blockquote><p>Defined in: <a href="https://github.com/ZL-Asica/React/blob/e18738cc49ff40aa2d8b2a9bb55ae47821286223/src/utils/domUtils.ts#L134" target="_blank" rel="noreferrer">src/utils/domUtils.ts:134</a></p><p>Scrolls to the top of the page or a specified vertical position.</p><p>This function uses <code>window.scrollTo</code> to scroll to a specified vertical position with a configurable scroll behavior (<code>auto</code> or <code>smooth</code>).</p><p>Optionally, a callback can be provided to execute logic after scrolling.</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><h3 id="top" tabindex="-1">top? <a class="header-anchor" href="#top" aria-label="Permalink to &quot;top?&quot;">​</a></h3><p><code>number</code> = <code>0</code></p><p>The vertical scroll position to scroll to (default is <code>0</code>).</p><h3 id="behavior" tabindex="-1">behavior? <a class="header-anchor" href="#behavior" aria-label="Permalink to &quot;behavior?&quot;">​</a></h3><p>The scroll behavior (default is <code>&#39;smooth&#39;</code>).</p><p><code>&quot;auto&quot;</code> | <code>&quot;smooth&quot;</code></p><h3 id="callback" tabindex="-1">callback? <a class="header-anchor" href="#callback" aria-label="Permalink to &quot;callback?&quot;">​</a></h3><p>() =&gt; <code>void</code></p><p>Optional callback function to execute after scrolling.</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>Function</code></p><h3 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h3><h4 id="event" tabindex="-1">event? <a class="header-anchor" href="#event" aria-label="Permalink to &quot;event?&quot;">​</a></h4><p><code>MouseEvent</code></p><h3 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h3><p><code>void</code></p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Bind it to a button click event</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> onClick</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">backToTop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()}&gt;Back to Top&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Smooth scroll to the top of the page</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">backToTop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Immediate scroll to 100px from the top</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">backToTop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;auto&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Scroll to the top and log a message after</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">backToTop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;smooth&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Scrolled to top!&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span></code></pre></div>`,25)]))}const b=s(o,[["render",l]]);export{d as __pageData,b as default};
