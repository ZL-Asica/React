import{_ as a,c as s,a2 as t,o as i}from"./chunks/framework.BQmytedh.js";const k=JSON.parse('{"title":"lerp()","description":"","frontmatter":{},"headers":[],"relativePath":"docs/utils/lerp.md","filePath":"docs/utils/lerp.md"}'),r={name:"docs/utils/lerp.md"};function n(l,e,o,p,d,h){return i(),s("div",null,e[0]||(e[0]=[t('<h1 id="lerp" tabindex="-1">lerp() <a class="header-anchor" href="#lerp" aria-label="Permalink to &quot;lerp()&quot;">​</a></h1><blockquote><p><strong>lerp</strong>(<code>start</code>, <code>end</code>, <code>t</code>): <code>number</code></p></blockquote><p>Linearly interpolates between two numbers.</p><h2 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h2><p>• <strong>start</strong>: <code>number</code></p><p>The starting value.</p><p>• <strong>end</strong>: <code>number</code></p><p>The ending value.</p><p>• <strong>t</strong>: <code>number</code></p><p>The interpolation factor (between 0 and 1).</p><h2 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h2><p><code>number</code></p><p>The interpolated value. Returns <code>NaN</code> if inputs are invalid or <code>t</code> is out of range.</p><h2 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h2><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> lerpValue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> lerp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 5</span></span></code></pre></div><h2 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h2><p><a href="https://github.com/ZL-Asica/React/blob/52f4f3e8634619ebd983202b1cf5bcbf7884e068/src/utils/mathUtils.ts#L71" target="_blank" rel="noreferrer">utils/mathUtils.ts:71</a></p>',17)]))}const u=a(r,[["render",n]]);export{k as __pageData,u as default};
